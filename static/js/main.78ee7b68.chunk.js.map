{"version":3,"sources":["reducers/index.js","store/index.js","components/NavForm/NavForm.js","actions/index.js","components/Nav/Nav.js","components/Pagination/Pagination.js","components/PokemonCard/PokemonCard.js","components/PokemonList/PokemonList.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["initialState","activeFilter","filterValues","weight","height","none","rootReducer","state","action","type","filterName","payload","options","filterValue","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","Wrapper","styled","div","connect","filterNames","dispatch","toggleFilter","toggleFilterAction","changeFilterValue","changeFilterValueAction","props","useState","weightVal","setWeightVal","heightVal","setHeightVal","dispatchInput","e","target","dataset","filter","value","Form","className","onClick","name","id","getFilterName","Group","controlId","Check","label","defaultChecked","Control","min","max","step","onChange","onMouseUp","onTouchEnd","data-filter","Nav","Navbar","fixed","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","StyledWrapper","Pagination","gotoNextPage","gotoPrevPage","Button","variant","StyledImg","img","StyledList","ul","StyledListItem","li","StyledSpan","span","pokemon","toLowerCase","split","map","letter","charAt","toUpperCase","substring","join","stats","allTypes","typesList","i","types","length","push","getAllTypes","Col","lg","md","sm","Card","parseInt","Body","Title","src","sprites","front_default","PokemonList","pokemonData","Row","key","StyledLoader","Main","url","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","getPokemon","Promise","resolve","fetch","then","res","json","data","useEffect","cancel","loadingPokemon","a","all","pokemonRecord","_pokemonData","axios","get","cancelToken","CancelToken","c","next","previous","results","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78ee7b68.chunk.js","sourcesContent":["const initialState = {\n  activeFilter: \"none\",\n  filterValues: {\n    weight: 300,\n    height: 7,\n    none: 0\n  }\n}\n\nconst rootReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ('TOGGLE_FILTER'):\n      const { filterName } = action.payload;\n      return {\n        ...state,\n        activeFilter: filterName\n      }\n    case ('CHANGE_FILTER_VALUE'):\n      const { options } = action.payload;\n      return {\n        ...state,\n        filterValues: {\n          ...state.filterValues,\n          [options.filterName]: options.filterValue,\n        }\n      }\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport reducers from '../reducers';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n  reducers, /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n/* eslint-enable */\n\nexport default store;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport { toggleFilter as toggleFilterAction } from '../../actions';\nimport { changeFilterValue as changeFilterValueAction } from '../../actions';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  max-width: 350px;\n`;\n\nconst NavForm = (props) => {\n  const { toggleFilter, changeFilterValue, filterValues } = props;\n  const [weightVal, setWeightVal] = useState(filterValues.weight);\n  const [heightVal, setHeightVal] = useState(filterValues.height);\n\n  const dispatchInput = (e) => {\n    let options = {};\n    options.filterName = e.target.dataset.filter;\n    options.filterValue = e.target.value;\n    changeFilterValue(options);\n  }\n\n  const getFilterName = (e) => {\n    if(e.target.name === \"filters\") {\n      toggleFilter(e.target.id)\n    }\n  }\n\n  return (\n    <Form className=\"ml-auto mt-3\" \n      onClick={(e) => getFilterName(e)}\n    >\n      <Form.Group controlId=\"formBasicCheckbox\">\n        <Form.Check id=\"none\" value=\"none\" type=\"radio\" name=\"filters\" label={`disable all filters`} defaultChecked=\"true\"/>\n        <Form.Check id=\"weight\" value=\"weight\" type=\"radio\" name=\"filters\" label={`tag pokemons heavier than: ${weightVal}`}/>\n        <Wrapper>\n          <Form.Control \n            type=\"range\"\n            min=\"0\" max=\"500\" step=\"10\" value={weightVal}\n            onChange={(e) => setWeightVal(e.target.value, \"weight\")}\n            onMouseUp={(e) => dispatchInput(e)}\n            onTouchEnd={(e) => dispatchInput(e)}\n            data-filter=\"weight\"\n          />\n        </Wrapper>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicRange\">\n        <Form.Check id=\"height\" value=\"height\" type=\"radio\" name=\"filters\" label={`tag pokemons taller than: ${heightVal}`}/>\n        <Wrapper>\n          <Form.Control \n            type=\"range\"\n            min=\"0\" max=\"50\" value={heightVal}\n            onChange={(e) => setHeightVal(e.target.value, \"height\")}\n            onMouseUp={(e) => dispatchInput(e)}\n            onTouchEnd={(e) => dispatchInput(e)}\n            data-filter=\"height\"\n          />\n        </Wrapper>\n      </Form.Group>\n    </Form>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    filterNames: state.filterNames,\n    filterValues: state.filterValues\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: filterName => dispatch(toggleFilterAction(filterName)),\n  changeFilterValue: options => dispatch(changeFilterValueAction(options)),\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(NavForm);","export const toggleFilter = (filterName) => {\n  return {\n    type: 'TOGGLE_FILTER',\n    payload: {\n      filterName\n    }\n  }\n}\n\nexport const changeFilterValue = (options) => {\n  return {\n    type: 'CHANGE_FILTER_VALUE',\n    payload: {\n      options\n    }\n  }\n}","import React from 'react'\nimport { Navbar, Container } from 'react-bootstrap';\nimport NavForm from '../NavForm/NavForm';\n\nexport default function Nav() {\n  return (\n    <Navbar fixed=\"top\" bg=\"light\" expand=\"\">\n      <Container>\n        <Navbar.Brand href=\"index.html\">My Pokedex</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <NavForm />\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 10px;\n`;\n\nexport default function Pagination({ gotoNextPage, gotoPrevPage }) {\n  return (\n    <StyledWrapper>\n      {gotoPrevPage && <Button variant=\"primary\" className=\"mx-2\" onClick={gotoPrevPage}>Previous</Button>}\n      {gotoNextPage && <Button variant=\"primary\" className=\"mx-2\" onClick={gotoNextPage}>Next</Button>}\n    </StyledWrapper>\n  )\n}\n","import React from 'react';\nimport { Col, Card } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport './PokemonCard.css';\nimport { connect } from 'react-redux';\n\nconst StyledImg = styled.img`\n  width: 120px;\n  height: auto;\n  display: block;\n  margin: 10px auto 20px;\n`;\n\nconst StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nconst StyledListItem = styled.li`\n`;\n\nconst StyledSpan = styled.span`\n  font-weight: bold;\n  display: inline-block;\n  margin-right: 5px;\n`;\n\nconst PokemonCard = ({activeFilter, filterValues, pokemon}) => {\n\n  let name = pokemon['name'].toLowerCase().split(' ').map(letter => letter.charAt(0).toUpperCase() + letter.substring(1)).join();\n  let { stats } = pokemon;\n\n  const getAllTypes = () => {\n    let typesList = [];\n    for(let i=0; i<pokemon.types.length; i++) {\n      typesList.push(pokemon.types[i].type.name);\n    }\n    return typesList.join(\", \");\n  }\n\n  const allTypes = getAllTypes();\n\n  return (\n    <Col lg={3} md={4} sm={6} className=\"mb-3\">\n      <Card id=\"pcard\" className={(pokemon[activeFilter] > parseInt(filterValues[activeFilter])) ? \"active\" : \"\"}>\n        <Card.Body className={\"d-flex flex-column align-items-center\"}>\n          <Card.Title className={\"text-center\"}>{name}</Card.Title>\n          <StyledImg src={pokemon.sprites.front_default} />\n          <StyledList>\n            <StyledListItem><StyledSpan>Id:</StyledSpan>{pokemon.id}</StyledListItem>\n            <StyledListItem><StyledSpan>Types:</StyledSpan>{allTypes}</StyledListItem>\n            <StyledListItem><StyledSpan>Height:</StyledSpan>{pokemon.height}</StyledListItem>\n            <StyledListItem><StyledSpan>Weight:</StyledSpan>{pokemon.weight}</StyledListItem>\n            <StyledListItem><StyledSpan>Speed:</StyledSpan>{stats[0][\"base_stat\"]}</StyledListItem>\n            <StyledListItem><StyledSpan>Special defense:</StyledSpan>{stats[1][\"base_stat\"]}</StyledListItem>\n            <StyledListItem><StyledSpan>Defense:</StyledSpan>{stats[2][\"base_stat\"]}</StyledListItem>\n            <StyledListItem><StyledSpan>Attack:</StyledSpan>{stats[3][\"base_stat\"]}</StyledListItem>\n            <StyledListItem><StyledSpan>HP:</StyledSpan>{stats[4][\"base_stat\"]}</StyledListItem>\n          </StyledList>\n        </Card.Body>\n      </Card>\n    </Col>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeFilter: state.activeFilter,\n    filterValues: state.filterValues\n  };\n};\n\nexport default connect(mapStateToProps)(PokemonCard);","import React from 'react';\nimport PokemonCard from '../PokemonCard/PokemonCard';\nimport { Container, Row } from 'react-bootstrap';\n\n\nexport default function PokemonList({ pokemonData }) {\n  return (\n    <Container>\n      <Row>\n      {pokemonData.map(pokemon => (\n        <PokemonCard \n          key={pokemon.name}\n          pokemon={pokemon}\n        />\n      ))}\n      </Row>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport './Main.css';\nimport Nav from '../Nav/Nav';\nimport Pagination from '../Pagination/Pagination';\nimport PokemonList from '../PokemonList/PokemonList';\n\nconst StyledLoader = styled.div`\n  text-align: center;\n  margin: 50px;\n  font-size: 25px;\n`;\n\nfunction Main() {\n  const url = \"https://pokeapi.co/api/v2/pokemon/\";\n  const [pokemonData, setPokemon] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState(url);\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function getPokemon(url) {\n    return new Promise((resolve) => {\n      fetch(url)\n        .then(res => res.json())\n        .then(data => {\n          resolve(data)\n        })\n    })\n  }\n  \n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n\n    const loadingPokemon = async (data) => {\n      let _pokemonData = await Promise.all(\n        data.map(async pokemon => {\n          let pokemonRecord = await getPokemon(pokemon.url);\n          return pokemonRecord;\n      }))\n      setPokemon(_pokemonData);\n    }\n    \n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      setNextPageUrl(res.data.next);\n      setPrevPageUrl(res.data.previous);\n      // prevent auto switching limit to 4 when reaching end of the list\n      (res.data.next === null) ? setPrevPageUrl(url + \"?offset=940&limit=20\") : setPrevPageUrl(res.data.previous);\n      loadingPokemon(res.data.results);\n    });\n\n    return () => cancel();\n  }, [currentPageUrl])\n\n  function gotoNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function gotoPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  return (\n    <>\n      <Nav />\n      {loading ? <StyledLoader>Loading...</StyledLoader> : (\n        <Container className=\"cnt\">\n          <Pagination\n            gotoNextPage={nextPageUrl ? gotoNextPage : null}\n            gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n          />\n          <PokemonList pokemonData={pokemonData} />\n          <Pagination\n            gotoNextPage={nextPageUrl ? gotoNextPage : null}\n            gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n          />\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from './components/Main/Main';\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}